<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Live Location Tracker</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <style>
        #map {
            height: 100vh; /* Full height of the viewport */
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <script>
        const socket = io();

        // Initialize the map
        const map = L.map('map').setView([0, 0], 10); // Center at [0, 0] initially

        // Add a tile layer (OpenStreetMap tiles in this example)
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: "Kush Sharma's Map",
            maxZoom: 19,
        }).addTo(map);

        // Add a marker to represent the user's location
        const markers ={};

        socket.on("receive-location", (data)=>{
            
            const {id,latitude,longitude} = data;
            map.setView([latitude,longitude]);

            if(markers[id]){
                markers[id].setLatLng=([latitude,longitude]);
            }

            else{

                markers[id] = L.marker([latitude,longitude]).addTo(map);
            }
        });

        socket.on("user-disconnected!!",(id)=>{

            if(markers[id]){
                map.removeLayer(markers[id]);

                delete markers[id];
            };

        })

        if (navigator.geolocation) {
            navigator.geolocation.watchPosition(
                (position) => {
                    const { latitude, longitude } = position.coords;

                    // Emit the location to the server
                    socket.emit("send-location", { latitude, longitude });

                    // Update the map view and marker position
                    if (marker) {
                        marker.setLatLng([latitude, longitude]);
                    } else {
                        marker = L.marker([latitude, longitude]).addTo(map);
                    }
                    map.setView([latitude, longitude], 15); // Center the map on the user's location
                },
                (error) => {
                    console.error(error);
                },
                {
                    enableHighAccuracy: true,
                    maximumAge: 0,
                    timeout: 5000,
                }
            );
        } else {
            console.error("Geolocation is not supported by this browser.");
        }
    </script>
</body>
</html>
